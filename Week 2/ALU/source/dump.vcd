$date
	Mon Jan 02 03:51:04 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top_tb $end
$var wire 1 ! rvalid $end
$var wire 4 " result [3:0] $end
$var wire 1 # cb $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$var reg 1 & clk $end
$var reg 4 ' expected_result [3:0] $end
$var reg 1 ( funct $end
$var reg 12 ) instruction [11:0] $end
$var reg 3 * opcode [2:0] $end
$var reg 16 + operation [15:0] $end
$var reg 1 , reset_n $end
$var reg 1 - start $end
$scope module DUT $end
$var wire 1 & clk $end
$var wire 12 . instruction [11:0] $end
$var wire 1 , reset_n $end
$var wire 1 - start $end
$var wire 1 / shift_en_out $end
$var wire 1 0 shift_en_in $end
$var wire 1 ! rvalid $end
$var wire 5 1 result_out [4:0] $end
$var wire 4 2 result [3:0] $end
$var wire 4 3 in_result [3:0] $end
$var wire 1 4 in_cb $end
$var wire 1 5 exec_en $end
$var wire 12 6 data_out [11:0] $end
$var wire 1 # cb $end
$var parameter 32 7 INSTR_LENGTH $end
$scope module ALU $end
$var wire 4 8 a [3:0] $end
$var wire 4 9 b [3:0] $end
$var wire 1 : funct $end
$var wire 3 ; opcode [2:0] $end
$var wire 4 < operator [3:0] $end
$var wire 1 5 exec_en $end
$var parameter 32 = BIT_LENGTH $end
$var reg 1 4 cb $end
$var reg 4 > out [3:0] $end
$upscope $end
$scope module CONTROL $end
$var wire 1 & clk $end
$var wire 1 , reset_n $end
$var wire 1 - start $end
$var parameter 2 ? EXECUTE $end
$var parameter 2 @ IDLE $end
$var parameter 2 A LOAD $end
$var parameter 2 B MEM_WRITE $end
$var reg 1 5 exec_en $end
$var reg 2 C next_state [1:0] $end
$var reg 2 D present_state [1:0] $end
$var reg 1 ! rvalid $end
$var reg 1 0 shift_en_in $end
$var reg 1 / shift_en_out $end
$scope begin NSL $end
$upscope $end
$scope begin OL $end
$upscope $end
$upscope $end
$scope module INPUT_REGISTER $end
$var wire 1 & clk $end
$var wire 12 E data_in_p [11:0] $end
$var wire 1 , reset_n $end
$var wire 1 0 shift_en $end
$var parameter 32 F DATA_LENGTH $end
$var reg 12 G data_out_p [11:0] $end
$upscope $end
$scope module OUTPUT_REGISTER $end
$var wire 1 & clk $end
$var wire 5 H data_in_p [4:0] $end
$var wire 1 , reset_n $end
$var wire 1 / shift_en $end
$var parameter 32 I DATA_LENGTH $end
$var reg 5 J data_out_p [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 I
b1100 F
b11 B
b1 A
b0 @
b10 ?
b100 =
b1100 7
$end
#0
$dumpvars
bx J
bx H
bx G
b101000001010 E
bx D
bx C
bx >
bx <
bx ;
x:
bx 9
bx 8
bx 6
x5
x4
bx 3
bx 2
bx 1
x0
x/
b101000001010 .
0-
1,
bx +
b10 *
b101000001010 )
1(
bx '
0&
b1 %
b100 $
x#
bx "
x!
$end
#1
1&
#2
04
b0 H
b0 3
b0 >
05
0!
0/
00
b0 C
0#
b0 "
b0 2
0:
b0 <
b0 ;
b0 9
b0 8
b0 D
b0 1
b0 J
b0 6
b0 G
0,
0&
#3
1&
#4
1,
0&
#5
1&
#6
b1 C
b101011 +
b101 '
b1000001000 )
b1000001000 .
b1000001000 E
0(
b0 *
1-
0&
#7
10
b10 C
b1 D
1&
#8
0&
#9
b101 H
b101 3
b101 >
15
1/
00
b11 C
b1 9
b100 8
b10 D
b1000001000 6
b1000001000 G
1&
#10
0&
#11
b0 H
b0 3
b0 >
b101101 +
b11 '
b101000001000 )
b101000001000 .
b101000001000 E
1(
b101 "
b101 2
05
1!
0/
b0 C
b101 1
b101 J
b11 D
1&
#12
0&
#13
0!
b1 C
b0 D
1&
#14
0&
#15
10
b10 C
b1 D
1&
#16
0&
#17
b11 H
b11 3
b11 >
15
1/
00
b11 C
b1000 <
1:
b10 D
b101000001000 6
b101000001000 G
1&
#18
0&
#19
b0 H
b0 3
b0 >
b100110 +
b0 '
b1000001001 )
b1000001001 .
b1000001001 E
0(
b1 *
b11 "
b11 2
05
1!
0/
b0 C
b11 1
b11 J
b11 D
1&
#20
0&
#21
0!
b1 C
b0 D
1&
#22
0&
#23
10
b10 C
b1 D
1&
#24
0&
#25
15
1/
00
b11 C
0:
b1 <
b1 ;
b10 D
b1000001001 6
b1000001001 G
1&
#26
0&
#27
b111111000100110 +
b1111 '
b101000001001 )
b101000001001 .
b101000001001 E
1(
b0 "
b0 2
05
1!
0/
b0 C
b0 1
b0 J
b11 D
1&
#28
0&
#29
0!
b1 C
b0 D
1&
#30
0&
#31
10
b10 C
b1 D
1&
#32
0&
#33
14
b11111 H
b1111 3
b1111 >
15
1/
00
b11 C
b1001 <
1:
b10 D
b101000001001 6
b101000001001 G
1&
#34
0&
#35
04
b0 H
b0 3
b0 >
b1111100 +
b101 '
b1000001010 )
b1000001010 .
b1000001010 E
0(
b10 *
1#
b1111 "
b1111 2
05
1!
0/
b0 C
b11111 1
b11111 J
b11 D
1&
#36
0&
#37
0!
b1 C
b0 D
1&
#38
0&
#39
10
b10 C
b1 D
1&
#40
0&
#41
b101 H
b101 3
b101 >
15
1/
00
b11 C
0:
b10 <
b10 ;
b10 D
b1000001010 6
b1000001010 G
1&
#42
0&
#43
b0 H
b0 3
b0 >
b111111001111100 +
b1010 '
b101000001010 )
b101000001010 .
b101000001010 E
1(
0#
b101 "
b101 2
05
1!
0/
b0 C
b101 1
b101 J
b11 D
1&
#44
0&
#45
0!
b1 C
b0 D
1&
#46
0&
#47
10
b10 C
b1 D
1&
#48
0&
#49
14
b11010 H
b1010 3
b1010 >
15
1/
00
b11 C
b1010 <
1:
b10 D
b101000001010 6
b101000001010 G
1&
#50
0&
#51
04
b0 H
b0 3
b0 >
b1111110 +
b1011 '
b1000001011 )
b1000001011 .
b1000001011 E
0(
b11 *
1#
b1010 "
b1010 2
05
1!
0/
b0 C
b11010 1
b11010 J
b11 D
1&
#52
0&
#53
0!
b1 C
b0 D
1&
#54
0&
#55
10
b10 C
b1 D
1&
#56
0&
#57
14
b11011 H
b1011 3
b1011 >
15
1/
00
b11 C
0:
b11 <
b11 ;
b10 D
b1000001011 6
b1000001011 G
1&
#58
0&
#59
04
b0 H
b0 3
b0 >
b1110 '
b101000001100 )
b101000001100 .
b101000001100 E
1(
b100 *
b1011 "
b1011 2
05
1!
0/
b0 C
b11011 1
b11011 J
b11 D
1&
#60
0&
#61
0!
b1 C
b0 D
1&
#62
0&
#63
10
b10 C
b1 D
1&
#64
0&
#65
14
b11110 H
b1110 3
b1110 >
15
1/
00
b11 C
1:
b1100 <
b100 ;
b10 D
b101000001100 6
b101000001100 G
1&
#66
0&
#67
04
b0 H
b0 3
b0 >
b1011110 +
b101 '
b1000001101 )
b1000001101 .
b1000001101 E
0(
b101 *
b1110 "
b1110 2
05
1!
0/
b0 C
b11110 1
b11110 J
b11 D
1&
#68
0&
#69
0!
b1 C
b0 D
1&
#70
0&
#71
10
b10 C
b1 D
1&
#72
0&
#73
b101 H
b101 3
b101 >
15
1/
00
b11 C
0:
b101 <
b101 ;
b10 D
b1000001101 6
b1000001101 G
1&
#74
0&
#75
b0 H
b0 3
b0 >
b111111001011110 +
b1010 '
b101000001101 )
b101000001101 .
b101000001101 E
1(
0#
b101 "
b101 2
05
1!
0/
b0 C
b101 1
b101 J
b11 D
1&
#76
0&
#77
0!
b1 C
b0 D
1&
#78
0&
#79
10
b10 C
b1 D
1&
#80
0&
#81
14
b11010 H
b1010 3
b1010 >
15
1/
00
b11 C
b1101 <
1:
b10 D
b101000001101 6
b101000001101 G
1&
#82
0&
#83
04
b0 H
b0 3
b0 >
b11110000111100 +
b0 '
b1000010110 )
b1000010110 .
b1000010110 E
b10 %
0(
b110 *
1#
b1010 "
b1010 2
05
1!
0/
b0 C
b11010 1
b11010 J
b11 D
1&
#84
0&
#85
0!
b1 C
b0 D
1&
#86
0&
#87
10
b10 C
b1 D
1&
#88
0&
#89
b10000 H
14
15
1/
00
b11 C
0:
b110 <
b110 ;
b10 9
b10 D
b1000010110 6
b1000010110 G
1&
#90
0&
#91
b0 H
04
b0 "
b0 2
05
1!
0/
b0 C
b10000 1
b10000 J
b11 D
1&
#92
0&
#93
0!
b1 C
b0 D
1&
#94
0&
#95
10
b10 C
b1 D
1&
#96
0&
#97
b10000 H
14
15
1/
00
b11 C
b10 D
1&
#98
0&
#99
b0 H
04
05
1!
0/
b0 C
b11 D
1&
#100
0&
#101
0!
b1 C
b0 D
1&
